AWSTemplateFormatVersion: "2010-09-09"
Metadata:
  License: Apache-2.0
Parameters:
  LogGroupName:
    Description: Name of the Log Group for S3 Delivery
    Type: String
    Default: S3DeliveryLog
  LogStreamName:
    Description: Name of the Log Stream for S3 Delivery
    Type: String
    Default: S3DeliveryLogStream
  BufferSize:
    Description: Buffering Hints size in MB
    Type: Number
    Default: 128
  BufferInterval:
    Description: Buffering Hints interval in seconds
    Type: Number
    Default: 60
Resources:
  S3DeliveryLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/kinesisfirehose/${AWS::StackName}/${LogGroupName}"
      RetentionInDays: 14
  S3DeliveryLogStream:
    Type: AWS::Logs::LogStream
    Properties:
      LogGroupName: !Ref S3DeliveryLogGroup
      LogStreamName: !Sub "${AWS::StackName}-${LogStreamName}"
  S3DeliveryStream:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      DeliveryStreamName: !Sub ${AWS::StackName}-S3DeliveryStream
      DeliveryStreamType: DirectPut
      ExtendedS3DestinationConfiguration:
        BucketARN: !GetAtt S3DeliveryBucket.Arn
        BufferingHints:
          SizeInMBs: !Ref BufferSize
          IntervalInSeconds: !Ref BufferInterval
        CloudWatchLoggingOptions:
          Enabled: true
          LogGroupName: !Ref S3DeliveryLogGroup
          LogStreamName: !Ref S3DeliveryLogStream
        CompressionFormat: UNCOMPRESSED
        ErrorOutputPrefix: error/!{firehose:random-string}/!{firehose:error-output-type}/!{timestamp:yyyy/MM/dd}/
        Prefix: data/year=!{timestamp:yyyy}/month=!{timestamp:MM}/day=!{timestamp:dd}/
        RoleARN: !GetAtt S3DeliveryRole.Arn
  S3DeliveryBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
  S3DeliveryRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service: firehose.amazonaws.com
            Action: 'sts:AssumeRole'
            Condition:
              StringEquals:
                'sts:ExternalId': !Ref 'AWS::AccountId'
      Path: "/"
      Policies:
        - PolicyName: S3-delivery-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 's3:AbortMultipartUpload'
                  - 's3:GetBucketLocation'
                  - 's3:GetObject'
                  - 's3:ListBucket'
                  - 's3:ListBucketMultipartUploads'
                  - 's3:PutObject'
                Resource:
                  - !GetAtt S3DeliveryBucket.Arn
                  - !Sub "${S3DeliveryBucket.Arn}/*"

Outputs:
  S3DeliveryLogGroup:
    Description: Log group name
    Value: !Ref S3DeliveryLogGroup
  S3DeliveryLogStream:
    Description: Log stream name
    Value: !Ref S3DeliveryLogStream
  S3DeliveryBucket:
    Description: S3 Delivery Bucket
    Value: !Ref S3DeliveryBucket
  S3DeliveryRole:
    Description: S3 Delivery Role
    Value: !Ref S3DeliveryRole
  S3DeliveryStream:
    Description: S3 Delivery Stream
    Value: !Ref S3DeliveryStream
